# start with the global settings which will
# apply to all sections in the configuration.
global
  # specify a global syslog server:
  #  - make sure that UDP logging is enabled:
  #    - uncomment the following lines in /etc/rsyslog.conf:
  #    	 #$ModLoad imudp
  #	 #$UDPServerRun 514
  #    - restart rsyslogd - /etc/init.d/rsyslog restart
  #    - tail -f /var/log/syslog
  # An IPv4 address optionally followed by a colon and a UDP port. If
  # no port is specified, 514 is used by default (the standard syslog port).
  log 127.0.0.1	local0 info

  # specify the maximum connections across the board
  maxconn 2048

  #Makes the process fork into background.
  daemon

# now set the default settings for each sub-section
defaults
  #Enable per-instance logging of events and traffic.
  log global
  # stick with http traffic
  mode http
  # set the number of times HAProxy should attempt to
  # connect to the target
  retries 3
  # specify the number of connections per front and
  # back end
  maxconn 1024
  # specify some timeouts (all in milliseconds)
  timeout connect 5000
  timeout client 50000
  timeout server 50000

########### Riak Configuration ###################
frontend dbcluster-pb
  # We'll be using protocol buffers to talk to
  # Riak, so we will change from the default mode
  # and use tcp instead
  mode tcp
  # we're only interested in allowing connections
  # from internal sources (so that we don't expose
  # ourselves to the web. so we shall only listen
  # on an internal interface on port 8087
  bind 192.168.56.10:8087
  # Default to the riak cluster configuration
  default_backend riaks-pb

# Here is the magic bit which load balances across
# our three instances of riak which are clustered
# together
backend riaks-pb
  # again, make sure we specify tcp instead of
  # the default http mode
  mode tcp
  # use a standard round robin approach for load
  # balancing
  balance roundrobin
  # list the three servers as optional targets
  # for load balancing - these are what we set
  # up during Part 1. Add health-checking as
  # well so that when nodes go down, HAProxy
  # can remove them from the cluster
  server Riak1 192.168.56.11:8087 check
  server Riak2 192.168.56.12:8087 check

frontend dbcluster-http
  mode http
  bind 192.168.56.10:8098
  default_backend riaks-http

backend riaks-http
  mode http
  balance roundrobin
  server Riak1 192.168.56.11:8098 check
  server Riak2 192.168.56.12:8098 check
  #Enable statistics reporting with default settings
  stats enable
  #Enable statistics with automatic refresh
  stats refresh 10s
  #Enable statistics and define the URI prefix to access them
  stats uri /admin?stats